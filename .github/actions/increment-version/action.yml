# Create a composite action that increments the build number or version number in the app.json file depending on the input

name: Increment Version
description: Increments the build number or version number in the app.json file depending on the input

inputs:
  increment-version:
    description: Whether to increment the version number (true or false)
    required: false
    default: "false"
  increment-version-type:
    description: The type of value to increment (major or minor or patch)
    # If increment-version is true, this input is required
    required: false
    default: "minor"
  increment-build-number:
    description: Whether to increment the build number (true or false)
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Get current version and build number
      id: get-current-version-info
      uses: ./.github/actions/get-current-version-info
    - name: Increment version
      id: increment-version
      if: inputs.increment-version == 'true'
      run: |
        currentVersion=$(jq -r '.expo.version' app.json)
        IFS='.' read -r -a versionParts <<< "$currentVersion"
        
        case "${{ inputs.increment-version-type }}" in
          major)
            versionParts[0]=$((versionParts[0] + 1))
            versionParts[1]=0
            versionParts[2]=0
            ;;
          minor)
            versionParts[1]=$((versionParts[1] + 1))
            versionParts[2]=0
            ;;
          patch)
            versionParts[2]=$((versionParts[2] + 1))
            ;;
          *)
            echo "Invalid version type. Use 'major', 'minor', or 'patch'."
            exit 1
            ;;
        esac

        newVersion=$(IFS=. ; echo "${versionParts[*]}")
        jq --arg newVersion "$newVersion" '.expo.version = $newVersion' app.json > temp.json && mv temp.json app.json
        echo "version=$newVersion" >> $GITHUB_OUTPUT
      shell: bash
    - name: Increment build number
      id: increment-build-number
      if: inputs.increment-build-number == 'true'
      run: |
        currentBuildNumber=${{ steps.get-current-version-info.outputs.build-number }}
        if [ -z "$currentBuildNumber" ]; then
          currentBuildNumber=0
        fi
        newBuildNumber=$((currentBuildNumber + 1))
        jq --arg newBuildNumber "$newBuildNumber" '.expo.ios.buildNumber = $newBuildNumber' app.json > temp.json && mv temp.json app.json
        echo "build-number=$newBuildNumber" >> $GITHUB_OUTPUT
      shell: bash