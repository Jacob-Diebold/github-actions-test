# Create a composite action that increments the build number or version number in the app.json file depending on the input

name: Increment Version
description: Increments the build number or version number in the app.json file depending on the input

inputs:
  increment-version:
    description: Whether to increment the version number (true or false)
    required: false
    default: "false"
  increment-version-type:
    description: The type of value to increment (major or minor or patch)
    # If increment-version is true, this input is required
    required: false
    default: "minor"
  increment-build-number:
    description: Whether to increment the build number (true or false)
    required: false
    default: "false"
  github-admin-token:
    description: The GitHub token with admin permissions
    required: true
  branch-to-push-changes-to:
    description: The branch to push the changes to
    required: true

runs:
  using: composite
  steps:
    - name: Get current version and build number
      id: get-current-version-info
      uses: ./.github/actions/get-current-version-info
    - name: Increment version
      id: increment-version
      if: inputs.increment-version == 'true'
      run: |
        currentVersion=$(jq -r '.expo.version' app.json)
        IFS='.' read -r -a versionParts <<< "$currentVersion"
        
        case "${{ inputs.increment-version-type }}" in
          major)
            versionParts[0]=$((versionParts[0] + 1))
            versionParts[1]=0
            versionParts[2]=0
            ;;
          minor)
            versionParts[1]=$((versionParts[1] + 1))
            versionParts[2]=0
            ;;
          patch)
            versionParts[2]=$((versionParts[2] + 1))
            ;;
          *)
            echo "Invalid version type. Use 'major', 'minor', or 'patch'."
            exit 1
            ;;
        esac

        newVersion=$(IFS=. ; echo "${versionParts[*]}")
        jq --arg newVersion "$newVersion" '.expo.version = $newVersion' app.json > temp.json && mv temp.json app.json
        echo "version=$newVersion" >> $GITHUB_OUTPUT
      shell: bash
    - name: Increment build number
      id: increment-build-number
      if: inputs.increment-build-number == 'true'
      run: |
        currentBuildNumber=${{ steps.get-current-version-info.outputs.build-number }}
        if [ -z "$currentBuildNumber" ]; then
          currentBuildNumber=0
        fi
        newBuildNumber=$((currentBuildNumber + 1))
        jq --arg newBuildNumber "$newBuildNumber" '.expo.ios.buildNumber = $newBuildNumber' app.json > temp.json && mv temp.json app.json
        echo "build-number=$newBuildNumber" >> $GITHUB_OUTPUT
      shell: bash

    - name: Commit and push changes
      id: commit-and-push
      if: inputs.increment-version == 'true' || inputs.increment-build-number == 'true'

      run: |

        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

        commit_message="Incremented"

        if [ "${{ inputs.increment-version }}" == "true" ]; then
          commit_message+=" version"
        fi

        if [ "${{ inputs.increment-build-number }}" == "true" ]; then
          if [ "$commit_message" != "Incremented" ]; then
            commit_message+=" and"
          fi
          commit_message+=" build number"
        fi

        commit_message+="."

        # Commit the changes
        git add app.json
        git commit -m "$commit_message"
        echo "REPO-NAME- ${{ github.repository }}"
        echo "Pushing changes to branch ${{ inputs.branch-to-push-changes-to }}"

        latest_sha=$(git rev-parse HEAD)

        # Push the changes
        gh api \
          -X PATCH \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "/repos/${{ github.repository }}/git/refs/heads/${{ inputs.branch-to-push-changes-to }}" \
          -F sha="$latest_sha"
        
      env:
        GITHUB_TOKEN: ${{ inputs.github-admin-token }}

      # TODO: Replace the user with a bot account that has admin access to the repo
      # run: |
      #   git config --global user.name "Jacob Diebold"
      #   git config --global user.email "diebold.jacob@gmail.com"

      #   # Determine commit message based on which increments occurred
      #   commit_message="Incremented"

      #   if [ "${{ inputs.increment-version }}" == "true" ]; then
      #     commit_message+=" version"
      #   fi

      #   if [ "${{ inputs.increment-build-number }}" == "true" ]; then
      #     if [ "$commit_message" != "Incremented" ]; then
      #       commit_message+=" and"
      #     fi
      #     commit_message+=" build number"
      #   fi

      #   commit_message+="."

        # # Commit and push changes
        # git add app.json
        # git commit -m "$commit_message"
        # git push
      # env:
      #   GITHUB_TOKEN: ${{ inputs.github-admin-token }}
      shell: bash